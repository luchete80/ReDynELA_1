class Structure;
name Structure::name;
method void Structure::addHistoryFile(HistoryFile*);Cette méthode ajoute un History File à la structure.
method void Structure::addInterface(Interface*);Cette méthode ajoute une interface de contact à la structure.
method void Structure::addMaterial(Material*);Cette méthode ajoute un nouveau matériau à la structure.
method void Structure::addSolver(Solver*);Cette méthode ajoute un solveur à la liste des solveurs du domaine courant de la structure.
method void Structure::attachConstantBC(Boundary*,NodeSet*);Cette méthode permet d'associer un ensemble de noeuds et des conditions aux limites constantes à la structure. On crée séparement un ensemble de noeuds, des conditions aux limites constantes et on lie les deux à l'aide de cette méthode.
method void Structure::attachInitialBC(Boundary*,NodeSet*);Cette méthode permet d'associer un ensemble de noeuds et des conditions aux limites initiales à la structure. On crée séparement un ensemble de noeuds, des conditions aux limites initiales et on lie les deux à l'aide de cette méthode.
method void Structure::attachMaterialToElements(Material*,ElementSet*);Cette méthode permet d'associer un ensemble d'éléments et un matériau au niveau de la structure. On crée séparement un ensemble d'éléments, un matériau et on lie les deux à l'aide de cette méthode.
method void Structure::compact();Cette méthode compacte les noeuds et les éléments de la structure. Cette utilisation permet alors après sauvegarde du fichier source d'optimiser au maximum les prochaines lectures de noeuds et éléments depuis le fichier source.\\Les numérotations des noeuds et éléments de la structure sont perdues.
method void Structure::createElement(Indice, Indice, Indice, Indice, Indice, Indice, Indice, Indice, Indice, Indice, Indice);Crée un élement fini du type courant  (voir méthode \texttt{setDefaultElement ()}) comportant un numéro d'identification et 10 noeuds.\\Cette méthode est donc utilisable pour les éléments finis de type \texttt{ElTet10n3D} par exemple.
method void Structure::createElement(Indice,Indice,Indice,Indice,Indice,Indice,Indice,Indice,Indice);Crée un élement fini du type courant  (voir méthode \texttt{setDefaultElement ()}) comportant un numéro d'identification et 8 noeuds.\\Cette méthode est donc utilisable pour les éléments finis de type \texttt{ElHex8n3D} par exemple.
method void Structure::createElement(Indice,Indice,Indice,Indice);Crée un élement fini du type courant  (voir méthode \texttt{setDefaultElement ()}) comportant un numéro d'identification et 3 noeuds.\\Cette méthode est donc utilisable pour les éléments finis de type \texttt{ElHex4n2D} par exemple.
method void Structure::createElement(Indice,Indice,Indice,Indice,Indice);Crée un élement fini du type courant  (voir méthode \texttt{setDefaultElement ()}) comportant un numéro d'identification et 4 noeuds.\\Cette méthode est donc utilisable pour les éléments finis de type \texttt{ElQua4n2D} par exemple.
method void Structure::createNode(Indice,Real,Real,Real);Crée un noeud à partir de la définition du numéro et des coordonnées x, y, z et l'ajoute à la grille et au domaine courant de la structure.
//method Grid* Structure::getCurrentGrid();Renvoie la grille courante de la structure. C'est à dire la grille courante du domaine courant de la structure.
method Real Structure::getCurrentTime();Méthode qui renvoie la valeur courante du temps de simulation de la structure.\\Cette méthode est utilisée dans le traitement par l'extracteur de données.
method Indice Structure::getFirstDataFileNumber();Cette méthode renvoie l'indice correspondant au premier fichier de résultats disponible dans le répertoire courant.\\Le nom des fichiers de résultats est défini par la méthode \texttt{setResultFile()}.
method Indice Structure::getLastDataFileNumber();Cette méthode renvoie l'indice correspondant au dernier fichier de résultats disponible dans le répertoire courant.\\Le nom des fichiers de résultats est défini par la méthode \texttt{setResultFile()}.
method Tensor2 Structure::getNodalTensor(Indice,String);Cette méthode renvoie une valeur tensorielle correspondant à un noeud de la structure et à un champ défini par un String.\\Voir chapitre \ref{sec:historyFiles} sur les History Files pour la définition de ces champs.
method Real Structure::getNodalValue(Indice,String);Cette méthode renvoie une valeur nodale correspondant à un noeud de la structure et à un champ défini par un String.\\Selon la nature de la variable (scalaire, vecteur, tenseur), le scalaire, la norme ou la norme équivalente sont retournées par cette méthode.\\Voir chapitre \ref{sec:historyFiles} sur les History Files pour la définition de ces champs.
method Real Structure::getNodalValue(Indice,String,Indice);Cette méthode renvoie une valeur nodale correspondant à un noeud de la structure, à un champ défini par un String et à la composante correspondante.\\Voir chapitre \ref{sec:historyFiles} sur les History Files pour la définition de ces champs.
method Vec3D Structure::getNodalVector(Indice,String);Cette méthode renvoie une valeur vectorielle (\texttt{Vec3D}) correspondant à un noeud de la structure et à un champ défini par un String.\\Voir chapitre \ref{sec:historyFiles} sur les History Files pour la définition de ces champs.
method void Structure::readResultFile(Indice);Lit un fichier de résultats et le charge en mémoire. On spécifie le numéro du fichier de résultat que l"on désire. Le nom du fichier de résultats est défini à partir de la commande \texttt{setResultFile()}.
method void Structure::rotate(String,Real);Cette méthode permet d'effectuer une rotation de tous les noeuds de la structure autour de l'origine dans la direction donnée par l'intermédiaire d'une chaine de caractères (x,y ou z), la valeur de l'angle de rotation.
method void Structure::rotate(String,Real,NodeSet*);Cette méthode permet d'effectuer une rotation de certains noeuds de la structure autour de l'origine dans la direction donnée par l'intermédiaire d'une chaine de caractères (x,y ou z), la valeur de l'angle de rotation et le NodeSet concerné par cette rotation.
method void Structure::rotate(Vec3D,Real);Cette méthode permet d'effectuer une rotation de tous les noeuds de la structure autour de l'origine dans la direction donnée par l'intermédiaire d'un vecteur 3D (x,y ou z), la valeur de l'angle de rotation.
method void Structure::rotate(Vec3D,Real,NodeSet*);Cette méthode permet d'effectuer une rotation de certains noeuds de la structure autour de l'origine dans la direction donnée par l'intermédiaire d'un vecteur 3D (x,y ou z), la valeur de l'angle de rotation et le NodeSet concerné par cette rotation.
method void Structure::scale(Real,NodeSet*);Cette méthode permet d'effectuer une mise à l'échelle de certains noeuds de la structure à partir de l'origine des axes. On spécifie la valeur de cette mise à l'échelle ainsi que le NodeSet sur lequel on applique la méthode.
method void Structure::scale(Real);Cette méthode permet d'effectuer une mise à l'échelle de tous les noeuds de la structure à partir de l'origine des axes. On spécifie la valeur de cette mise à l'échelle.
method void Structure::scale(Vec3D,NodeSet*);Cette méthode permet d'effectuer une mise à l'échelle différente suivant les axes de certains noeuds de la structure à partir de l'origine des axes. On spécifie la valeur de cette mise à l'échelle ainsi que le NodeSet sur lequel on applique la méthode.
method void Structure::scale(Vec3D);Cette méthode permet d'effectuer une mise à l'échelle différente suivant les axes de tous les noeuds de la structure à partir de l'origine des axes. On spécifie la valeur de cette mise à l'échelle.
method void Structure::setDefaultElement(Element*);A partir d'une instance d'une classe d'élément,  cette méthode permet de définir le type de base des prochains élements affectés à la structure.
method void Structure::setDomain(Domain*);Cette méthode selectionne le domaine courant de la structure.
method void Structure::setResultFile(String);Cette méthode permet de spécifier le nom générique des fichiers de sauvegarde à utiliser pour un calcul ou pour l'extraction des résultats. Le nom générique est la partie du nom de fichier située avant le numéro d'ordre dans les sauvegardes incrémentales.
method void Structure::setSaveTimes(Real,Real,Real);Cette méthode permet de régler au niveau du solveur les valeurs de temps de sauvegarde ainsi que le début et la fin de la sauvegarde.\\Le premier argument spécifie le temps de début de sauvegarde, le deuxième argument le temps de fin de sauvegarde et le troisième argument le temps écoulé entre deux sauvegardes successives.
method void Structure::translate(Vec3D);Cette méthode permet d'effectuer une translation de tous les noeuds de la structure. On spécifie le vecteur de cette translation.
method void Structure::translate(Vec3D,NodeSet*);Cette méthode permet d'effectuer une translation de certains noeuds de la structure. On spécifie le vecteur de cette translation et le NodeSet sur lequel l'opération est effectuée.
method Indice Structure::getNodesNumber();Cette méthode renvoie le nombre total de noeuds de la structure.
method Indice Structure::getElementsNumber();Cette méthode renvoie le nombre total d'éléments de la structure.
